cat  l.sql  | awk  -F , '{print "insert into tmp_calendar values( \047" $1 "\047 ," $2 "," $3 "," $4 ",\047" $5 "\047, \047 " $6 "\047 , \047"  $7 "\047 ,\047" $8 "\047,\047" $9 "\047," $10 "," $11 ", \047" $12 "\047 , \047 " $13 "\047 ," $14 "," $15 ",\047" $16  "\047,\047" $17 "\047,\047" $18 "\047,\047" $19 "\047," $20 ",\047" $21 " \047," $22 "," $23 "," $24 "," $25 "," $26 ",\047" $27 "\047, \047" $28 "\047);" }'



# dodajemy columne calendar_id
cat  Calendar2017v2.csv   | while read line;
do
    p=$(echo "$line" | awk -F ';' '{print $1}' | sed 's/-//g' )
echo "${line} ${p};;; "
done

#############################################  ladujemy dane
# psql -U mis_etl -c "COPY tmp_calender from '/home/mis/akrupa/Calendar2017v3.csv' DELIMITER ';' CSV;"


########################## uzupelniamy danymi kolumne 

update public.calendar
set
  holiday_flag='n'
where year > 2016
;


update public.calendar c
set
  holiday_flag='y'
where exists
(
  select 1
  from holiday h
  where (h.year = 0 or  h.year = c.year )  and h.month = c.month and h.day = c.day_num_in_month
)
and year >2015
;

update public.calendar c
set
   first_day_of_month=date_trunc('month', full_date)::date
,  last_day_of_month=(date_trunc('month', full_date+ interval '1 month'  )::date  - interval '1 day')::date
where
 year > 2016
;




